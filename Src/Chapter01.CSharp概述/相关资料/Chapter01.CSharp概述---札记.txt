------------------------------[基础知识]--------------------------------
1.C#是一种高级语言;
2.C#可以构建多系统多平台的软件和应用程序;
3.学习编程语言最好的办法就是写代码;
4.SDK:Software Development Kit(软件开发包)
5.项目文件结构的说明:
	1).生成Program.cs的控制台程序起点;
	2).生成.csproj的项目文件
		*编译使用的平台类型
		*生成的目标程序类型
		*支持的目标框架
		*启动设置参数
		*代码的依赖项(库)
-----------------------------------------------------------------------
------------------------------[重点知识]--------------------------------
1.C#是区分大小写的语言;
2..Net框架默认选择.NetCore:可以跨平台
3.使用"命令行接口"CLI(Command-Line Interface)生成项目和编译运行项目:
	1).打开Windows PowerShell工具
	2).命令:mkdir ./HelloWorld		---创建一个HelloWorld的项目文件夹
	3).命令:cd ./HelloWorld			---切换到HelloWorld项目目录
	4).命令:dotnet new console		---生成项目程序基本框架
	5).命令:dotnet run				---运行生成的程序
4.集成开发环境(IDE)
	1).VS快捷键:
		F9：设置/取消 短点
		F5: 调试
5.*线程和堆栈帧的初理解:
	1).线程: 每次调试程序,系统创建的线程ID会随机;也就是线程ID不固定;
	2).堆栈帧: 从上往下依次是从外到里的调用顺序;
6.编译和执行的理解_库文件和exe文件的理解
	1).扩展名位.dll代表"动态链接库";
	2).对于.NetCore,所有程序集都使用.dll扩展名
	3).编译输出默认目录:./bin/Debug/netcoreapp2.1
	4).编译好的输出.dll文件不能直接执行,需要使用CLI来寄宿(host)代码;对于.NetCore应用程序,使用Dotnet.exe作为寄宿进程;
	5).---如果使用.Net Framework平台,则编译后的exe文件可以直接执行;
	6).建议使用.NetCore平台生成的.dll程序集库文件,库文件相比.exe文件的好处是:库文件可以为其他程序所引用;
-----------------------------------------------------------------------