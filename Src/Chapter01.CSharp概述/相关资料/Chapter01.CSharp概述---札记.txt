------------------------------[基础知识]--------------------------------
1.C#是一种高级语言;
2.C#可以构建多系统多平台的软件和应用程序;
3.学习编程语言最好的办法就是写代码;
4.SDK:Software Development Kit(软件开发包)
5.项目文件结构的说明:
	1).生成Program.cs的控制台程序起点;
	2).生成.csproj的项目文件
		*编译使用的平台类型
		*生成的目标程序类型
		*支持的目标框架
		*启动设置参数
		*代码的依赖项(库)
6.C#的关键字
	关键字的作用:为帮助编译器解释代码;
	上下文关键字:特定位置才有意义,其他位置无意义;
7.标识符两种风格
	Pascal风格:PascalCase
	camel 风格:camelCase
8.关键字高级用法:关键字附加"@"前缀可作为标识符使用
	eg:@return,@throw()方法
9.保留关键字
	__arglist
	__makeref
	__reftype
	__refvalue
10.类型的定义
	所有类名使用PascalCase大小写风格
11.什么是方法
	方法是已命名的代码块
	方法可以重用,避免代码重复
	方法声明定义包括定义方法名和定义传入和传出方法的数据
	C#程序从Main方法开始执行
	static关键字和Main方法名匹配使用
	若不指定static,启动程序还需要先对类进行实例化;如果指定则无需实例化,使用类名.方法名即可调用
12.语言对比:C++/Java--main()方法是全部小写,C#遵循Pascal为Main()
13.C#使用分号标识语句结束
-----------------------------------------------------------------------
------------------------------[重点知识]--------------------------------
1.C#是区分大小写的语言;
2..Net框架默认选择.NetCore:可以跨平台
3.使用"命令行接口"CLI(Command-Line Interface)生成项目和编译运行项目:
	1).打开Windows PowerShell工具
	2).命令:mkdir ./HelloWorld		---创建一个HelloWorld的项目文件夹
	3).命令:cd ./HelloWorld			---切换到HelloWorld项目目录
	4).命令:dotnet new console		---生成项目程序基本框架
	5).命令:dotnet run				---运行生成的程序
	*注意:如果项目含有解决方案,则可以到.sln文件目录通过如下命令编译解决方案中的所有项目
	命令:dotnet build
	运行可以使用5)的方式,也可以使用命令任何目录均可执行的方式
	命令格式:dotnet run -p <projectfile>
	eg:dotnet run -p J:\Documents\Source\Repos\EssentialCSharp_7.0\Src\Chapter01.CSharp概述\Chapter01.CSharp概述.csproj		---绝对路径
	eg:dotnet run -p .\Src\Chapter01.CSharp概述\Chapter01.CSharp概述.csproj		---相对路径(也可以使用/)

4.集成开发环境(IDE)
	1).VS快捷键:
		F9：设置/取消 短点
		F5: 调试
5.*线程和堆栈帧的初理解:
	1).线程: 每次调试程序,系统创建的线程ID会随机;也就是线程ID不固定;
	2).堆栈帧: 从上往下依次是从外到里的调用顺序;
6.编译和执行的理解_库文件和exe文件的理解
	1).扩展名位.dll代表"动态链接库";
	2).对于.NetCore,所有程序集都使用.dll扩展名
	3).编译输出默认目录:./bin/Debug/netcoreapp2.1
	4).编译好的输出.dll文件不能直接执行,需要使用CLI来寄宿(host)代码;对于.NetCore应用程序,使用Dotnet.exe作为寄宿进程;
	5).---如果使用.Net Framework平台,则编译后的exe文件可以直接执行;
	6).建议使用.NetCore平台生成的.dll程序集库文件,库文件相比.exe文件的好处是:库文件可以为其他程序所引用;
7.语言对比:Java---文件名必须匹配类名
	C#是常遵守但非必须;一个文件可以包含多个类
	[C# 2.0特性]类的代码可通过所谓的[分部类]拆分到多个文件中;
-----------------------------------------------------------------------